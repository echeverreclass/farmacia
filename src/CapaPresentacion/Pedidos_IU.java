/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CapaPresentacion;

import CapaNegocio.AjustarColumnasJTable;
import CapaNegocio.EntradaProductoBD;
import CapaNegocio.ProductoBD;
import static CapaPresentacion.Menuu_IU.escritorioo;
import static CapaPresentacion.Venta_IU.tabla_ventas;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Est.Invitado_04
 */
public class Pedidos_IU extends javax.swing.JInternalFrame {

    public static DefaultTableModel tabla_temporal;
    DefaultTableModel tabla_temporal_venta = (DefaultTableModel) Venta_IU.tabla_ventas.getModel();
    public static int fila_seleccionada;
    String medida_seleccionada;
    double precio_seleccionado;

    /**
     * Creates new form Pedidos_IU
     */
    public Pedidos_IU() {
        initComponents();
        bgPresentacion.clearSelection();
    }

    private void limpiar_tabla_formulario_pedido() {
        DefaultTableModel tabla_temporal_pedidos = (DefaultTableModel) tabla_pedidos.getModel();
        tabla_temporal_pedidos.setRowCount(0);
    }

    private void limpiar_tabla_formulario_pedido_alternativo() {
        DefaultTableModel tabla_temporal_pedidos = (DefaultTableModel) tabla_pedidos_alternativos.getModel();
        tabla_temporal_pedidos.setRowCount(0);
    }

    private void exito(String mensaje) {
        JOptionPane.showConfirmDialog(this, mensaje, "MENSAJE", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
    }

    private void error(String mensaje) {
        JOptionPane.showConfirmDialog(this, mensaje, "ERROR", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
    }

    private void advertencia(String mensaje) {
        JOptionPane.showConfirmDialog(this, mensaje, "ADVERTENCIA", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE);
    }

    private void limpiaPrecios() {
        txtPrecioVentaPresentacion.setText("");
        txtPrecioVentaEquivalencia.setText("");
        txtStockEquivalencia.setText("");
        txtStockPresetacion.setText("");
        rbPresentacion.setText("");
        rbEquivalencia.setText("");
        bgPresentacion.clearSelection();
        rbPresentacion.setSelected(false);
        rbEquivalencia.setSelected(false);
        medida_seleccionada="";
        precio_seleccionado=0.0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgPresentacion = new javax.swing.ButtonGroup();
        jLabel11 = new javax.swing.JLabel();
        txtProducto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_pedidos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtcondicion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_pedidos_alternativos = new javax.swing.JTable();
        btnComposicion = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblPresentacion = new javax.swing.JLabel();
        lblEquivalencia = new javax.swing.JLabel();
        txtStockPresetacion = new javax.swing.JTextField();
        txtStockEquivalencia = new javax.swing.JTextField();
        txtPrecioVentaPresentacion = new javax.swing.JTextField();
        txtPrecioVentaEquivalencia = new javax.swing.JTextField();
        panelPedido = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        btnEnviar = new javax.swing.JButton();
        rbPresentacion = new javax.swing.JRadioButton();
        rbEquivalencia = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("BUSCAR PRODUCTOS");

        jLabel11.setText("PRODUCTO");

        txtProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtProductoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtProductoFocusLost(evt);
            }
        });
        txtProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProductoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProductoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProductoKeyTyped(evt);
            }
        });

        tabla_pedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "PRODUCTO", "PRESENTACION", "FECHA_VCTO", "LABORATORIO", "ID"
            }
        ));
        tabla_pedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_pedidosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_pedidos);
        if (tabla_pedidos.getColumnModel().getColumnCount() > 0) {
            tabla_pedidos.getColumnModel().getColumn(1).setPreferredWidth(500);
            tabla_pedidos.getColumnModel().getColumn(4).setHeaderValue("LABORATORIO");
            tabla_pedidos.getColumnModel().getColumn(5).setHeaderValue("ID");
        }

        jLabel1.setText("CONDICION");

        txtcondicion.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("PRODUCTOS CON LA MISMA COMPOSICION");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255), 2));

        tabla_pedidos_alternativos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "PRODUCTO", "PRESENTACION", "FECHA_VCTO"
            }
        ));
        jScrollPane2.setViewportView(tabla_pedidos_alternativos);
        if (tabla_pedidos_alternativos.getColumnModel().getColumnCount() > 0) {
            tabla_pedidos_alternativos.getColumnModel().getColumn(1).setPreferredWidth(500);
        }

        btnComposicion.setText("VER COMPOSICION");
        btnComposicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComposicionActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("MEDIDA");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 102, 102));
        jLabel4.setText("STOCK");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 102));
        jLabel5.setText("PRECIO VENTA");

        lblPresentacion.setText("CAJA");

        lblEquivalencia.setText("UNIDADES");

        txtStockPresetacion.setEnabled(false);

        txtStockEquivalencia.setEnabled(false);

        txtPrecioVentaPresentacion.setEnabled(false);

        txtPrecioVentaEquivalencia.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(68, 68, 68)
                                .addComponent(jLabel4)
                                .addGap(77, 77, 77)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPresentacion)
                                    .addComponent(lblEquivalencia))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtStockEquivalencia, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtStockPresetacion, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPrecioVentaPresentacion, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                    .addComponent(txtPrecioVentaEquivalencia))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPresentacion)
                            .addComponent(txtStockPresetacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtStockEquivalencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEquivalencia)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtPrecioVentaPresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPrecioVentaEquivalencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelPedido.setBackground(new java.awt.Color(255, 255, 255));
        panelPedido.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 102));
        jLabel10.setText("PRESENTACION");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 28)); // NOI18N
        jLabel13.setText("CANT");

        txtCantidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCantidadFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCantidadFocusLost(evt);
            }
        });
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCantidadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });

        btnEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add.png"))); // NOI18N
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        bgPresentacion.add(rbPresentacion);
        rbPresentacion.setText("...");
        rbPresentacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbPresentacionMouseClicked(evt);
            }
        });

        bgPresentacion.add(rbEquivalencia);
        rbEquivalencia.setText("...");
        rbEquivalencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbEquivalenciaMouseClicked(evt);
            }
        });
        rbEquivalencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbEquivalenciaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPedidoLayout = new javax.swing.GroupLayout(panelPedido);
        panelPedido.setLayout(panelPedidoLayout);
        panelPedidoLayout.setHorizontalGroup(
            panelPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(panelPedidoLayout.createSequentialGroup()
                        .addGroup(panelPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(panelPedidoLayout.createSequentialGroup()
                                .addGroup(panelPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(panelPedidoLayout.createSequentialGroup()
                                        .addComponent(rbPresentacion)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(rbEquivalencia))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelPedidoLayout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(btnEnviar)))
                        .addGap(0, 63, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelPedidoLayout.setVerticalGroup(
            panelPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbPresentacion)
                    .addComponent(rbEquivalencia))
                .addGap(18, 18, 18)
                .addGroup(panelPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(btnEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCantidad))
                .addContainerGap(126, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 895, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProducto))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtcondicion, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnComposicion)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtcondicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnComposicion))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbEquivalenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbEquivalenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbEquivalenciaActionPerformed

    private void txtProductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductoKeyReleased
        // TODO add your handling code here:
        try {
            limpiar_tabla_formulario_pedido();
            limpiar_tabla_formulario_pedido_alternativo();
            limpiaPrecios();

            DefaultTableModel tabla_temporal_pedidos = (DefaultTableModel) tabla_pedidos.getModel();

            String producto = txtProducto.getText();
            EntradaProductoBD oEntradaProductoBD = new EntradaProductoBD();

            if (txtProducto.getText().length() > 2) {

                tabla_temporal = oEntradaProductoBD.buscarProductoXdescripcion(producto);
                int cant = tabla_temporal.getRowCount();

                for (int i = 0; i < cant; i++) {
                    String serie = String.valueOf(tabla_temporal.getValueAt(i, 3).toString());
                    String descripcion = String.valueOf(tabla_temporal.getValueAt(i, 4).toString());
                    String presentacion = String.valueOf(tabla_temporal.getValueAt(i, 9).toString());
                    String fecha_vcto = String.valueOf(tabla_temporal.getValueAt(i, 11).toString());
                    String marca = String.valueOf(tabla_temporal.getValueAt(i, 7).toString());
                    String codigo = String.valueOf(tabla_temporal.getValueAt(i, 0).toString());

                    medida_seleccionada = presentacion;

                    Object[] data = {serie, descripcion, presentacion, fecha_vcto, marca, codigo};
                    tabla_temporal_pedidos.addRow(data);
                    AjustarColumnasJTable.ajustarAnchoColumnas(tabla_pedidos);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_txtProductoKeyReleased
private void productoAlternativo(){
    limpiar_tabla_formulario_pedido_alternativo();
    DefaultTableModel tabla_temporal_pedidos_alternativos=(DefaultTableModel) tabla_pedidos_alternativos.getModel();
    EntradaProductoBD oEntradaProductoBD= new EntradaProductoBD();
    String serie=tabla_pedidos.getValueAt(fila_seleccionada, 0).toString();
    DefaultTableModel tabla_temporal_alternativos;
    tabla_temporal_alternativos=oEntradaProductoBD.buscarProductoAlternativos(serie);
    int cant=tabla_temporal_alternativos.getRowCount();
    for (int i = 0; i < cant; i++) {
        serie=tabla_temporal_alternativos.getValueAt(i, 0).toString();
        String descripcion=tabla_temporal_alternativos.getValueAt(i, 1).toString();
        String presentacion=tabla_temporal_alternativos.getValueAt(i, 2).toString();
        String fecha_vcto=tabla_temporal_alternativos.getValueAt(i, 3).toString();
        
        Object[]dataAlternativos={serie,descripcion,presentacion,fecha_vcto};
        tabla_temporal_pedidos_alternativos.addRow(dataAlternativos);
    }
}
    private void tabla_pedidosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_pedidosMousePressed
        // TODO add your handling code here:
        limpiaPrecios();
        fila_seleccionada = tabla_pedidos.getSelectedRow();
        productoAlternativo();
        txtStockPresetacion.setText(tabla_temporal.getValueAt(fila_seleccionada, 12).toString());
        txtStockEquivalencia.setText(tabla_temporal.getValueAt(fila_seleccionada, 13).toString());
        txtPrecioVentaPresentacion.setText(tabla_temporal.getValueAt(fila_seleccionada, 18).toString());
        txtPrecioVentaEquivalencia.setText(tabla_temporal.getValueAt(fila_seleccionada, 20).toString());
        lblPresentacion.setText(tabla_temporal.getValueAt(fila_seleccionada, 9).toString());
        lblEquivalencia.setText(tabla_temporal.getValueAt(fila_seleccionada, 10).toString());

        txtcondicion.setText(tabla_temporal.getValueAt(fila_seleccionada, 5).toString());

        String presentacion = tabla_temporal.getValueAt(fila_seleccionada, 9).toString();
        String equivalencia = tabla_temporal.getValueAt(fila_seleccionada, 10).toString();

        if (presentacion.equals(equivalencia)) {
            precio_seleccionado = Double.parseDouble(tabla_temporal.getValueAt(fila_seleccionada, 20).toString());
            lblPresentacion.setVisible(false);
            txtStockPresetacion.setVisible(false);
            txtPrecioVentaPresentacion.setVisible(false);

            rbPresentacion.setText(equivalencia);
            rbEquivalencia.setText(equivalencia);
            rbEquivalencia.setSelected(true);
            rbPresentacion.setVisible(false);
        } else {
            precio_seleccionado = Double.parseDouble(tabla_temporal.getValueAt(fila_seleccionada, 18).toString());
            lblPresentacion.setVisible(true);
            txtStockPresetacion.setVisible(true);
            txtPrecioVentaPresentacion.setVisible(true);

            rbPresentacion.setText(presentacion);
            rbEquivalencia.setText(equivalencia);
            rbEquivalencia.setSelected(true);
            rbPresentacion.setVisible(true);
        }
        panelPedido.setVisible(true);
    }//GEN-LAST:event_tabla_pedidosMousePressed

    private void rbPresentacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbPresentacionMouseClicked
        // TODO add your handling code here:
        txtCantidad.setText("");
        txtCantidad.requestFocus();
        medida_seleccionada = tabla_temporal.getValueAt(fila_seleccionada, 9).toString();
        precio_seleccionado = Double.parseDouble(tabla_temporal.getValueAt(fila_seleccionada, 18).toString());
    }//GEN-LAST:event_rbPresentacionMouseClicked

    private void rbEquivalenciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbEquivalenciaMouseClicked
        // TODO add your handling code here:
        txtCantidad.setText("");
        txtCantidad.requestFocus();
        medida_seleccionada = tabla_temporal.getValueAt(fila_seleccionada, 10).toString();
        precio_seleccionado = Double.parseDouble(tabla_temporal.getValueAt(fila_seleccionada, 20).toString());
    }//GEN-LAST:event_rbEquivalenciaMouseClicked
    public void enviar(String medida) {
        fila_seleccionada = tabla_pedidos.getSelectedRow();
        int idep = Integer.parseInt(tabla_pedidos.getValueAt(fila_seleccionada, 5).toString());
        String serie = tabla_pedidos.getValueAt(fila_seleccionada, 0).toString();
        String producto = tabla_pedidos.getValueAt(fila_seleccionada, 1).toString();
        String lote = tabla_pedidos.getValueAt(fila_seleccionada, 2).toString();
        int cant = Integer.parseInt(txtCantidad.getText().trim());
        double precio = precio_seleccionado;
        double importe = cant * precio;
        Object[] data = {serie, producto, medida, cant, precio, importe, lote, idep};
        tabla_temporal_venta.addRow(data);
        Venta_IU.tabla_ventas.setModel(tabla_temporal_venta);

        calculaTotal();
        txtCantidad.setText("");
        txtProducto.setText("");
        txtProducto.requestFocus();
        limpiar_tabla_formulario_pedido();
    }

    private void calculaTotal() {
        int maxPedidos = tabla_temporal_venta.getRowCount();
        double total = 0;
        for (int i = 0; i < maxPedidos; i++) {
            total = total + (Double) tabla_temporal_venta.getValueAt(i, 5);
        }
        DecimalFormatSymbols symbols = new DecimalFormatSymbols(Locale.ENGLISH);
        DecimalFormat df = new DecimalFormat("#.#", symbols);
        String df_total = df.format(total);
        Venta_IU.txtSubTotal.setText("" + df_total);
        Venta_IU.txtTotalPagar.setText("" + df_total);

    }
    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        // TODO add your handling code here:
        try {
            if (!txtCantidad.getText().equals("0")) {
                if (txtCantidad.getText().length() > 0) {
                    if (rbPresentacion.isSelected() || rbEquivalencia.isSelected()) {
                        int cantPedido = Integer.parseInt(txtCantidad.getText().trim());
                        double quedaPresentacion = 0.0;
                        double quedaEquivalencia = 0.0;

                        if (rbPresentacion.isSelected()) {
                            medida_seleccionada = rbPresentacion.getText();
                            double cantStockPresentacion = Double.parseDouble(tabla_temporal.getValueAt(fila_seleccionada, 12).toString());
                            quedaPresentacion = cantStockPresentacion - cantPedido;
                            double ref = Integer.parseInt(tabla_temporal.getValueAt(fila_seleccionada, 22).toString());
                            quedaEquivalencia=quedaPresentacion*ref;
                            if (quedaPresentacion >= 0 || quedaEquivalencia >= 0) {
                                enviar(medida_seleccionada);
                                limpiaPrecios();
                            } else {
                                JOptionPane.showMessageDialog(this, "No hay la cantidad que solicita...");
                            }
                        } else {
                            medida_seleccionada=rbEquivalencia.getText();
                            int cantStockEquivalencia=Integer.parseInt(tabla_temporal.getValueAt(fila_seleccionada, 13).toString());
                            quedaEquivalencia=cantStockEquivalencia-cantPedido;
                            if (quedaEquivalencia>-1) {
                                enviar(medida_seleccionada);
                                limpiaPrecios();
                            } else {
                                JOptionPane.showMessageDialog(this, "No hay la cantidad que solicita...");
                            }
                        }
                    } else {
                        advertencia("Debe seleccionar una presentacion");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Ingrese una cntidad correcta");
                    txtCantidad.requestFocus();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Ingrese un numero mayor a cero...");
                txtCantidad.requestFocus();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void btnComposicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComposicionActionPerformed
        // TODO add your handling code here:
        Composicion_IU frame = new Composicion_IU();
        escritorioo.add(frame);
        Dimension a = escritorioo.getSize();
        Dimension b = frame.getSize();
        frame.setLocation((a.width - b.width) / 2, (a.height - b.height) / 2);
        frame.show();
    }//GEN-LAST:event_btnComposicionActionPerformed

    private void txtProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductoKeyPressed

    private void txtProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProductoFocusGained
        // TODO add your handling code here:
        
        txtProducto.setBackground(Color.yellow);
    }//GEN-LAST:event_txtProductoFocusGained

    private void txtProductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProductoFocusLost
        // TODO add your handling code here:
        
        txtProducto.setBackground(Color.white);
    }//GEN-LAST:event_txtProductoFocusLost

    private void txtCantidadFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCantidadFocusGained
        // TODO add your handling code here:
        
        txtCantidad.setBackground(Color.yellow);
    }//GEN-LAST:event_txtCantidadFocusGained

    private void txtCantidadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCantidadFocusLost
        // TODO add your handling code here:
        
        txtCantidad.setBackground(Color.white);
    }//GEN-LAST:event_txtCantidadFocusLost

    private void txtCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnEnviar.requestFocus();
            btnEnviar.doClick();
        }
    }//GEN-LAST:event_txtCantidadKeyPressed

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCantidadKeyTyped

    private void txtProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtProductoKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgPresentacion;
    private javax.swing.JButton btnComposicion;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblEquivalencia;
    private javax.swing.JLabel lblPresentacion;
    private javax.swing.JPanel panelPedido;
    private javax.swing.JRadioButton rbEquivalencia;
    private javax.swing.JRadioButton rbPresentacion;
    private javax.swing.JTable tabla_pedidos;
    private javax.swing.JTable tabla_pedidos_alternativos;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtPrecioVentaEquivalencia;
    private javax.swing.JTextField txtPrecioVentaPresentacion;
    private javax.swing.JTextField txtProducto;
    private javax.swing.JTextField txtStockEquivalencia;
    private javax.swing.JTextField txtStockPresetacion;
    private javax.swing.JTextField txtcondicion;
    // End of variables declaration//GEN-END:variables
}
